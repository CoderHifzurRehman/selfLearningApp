{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armst\\\\OneDrive\\\\Desktop\\\\dot eventures assignement\\\\self-learning-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// App.js\n\nimport React, { useState } from 'react';\nimport SubjectList from './components/SubjectList';\nimport TutorialPage from './components/TutorialPage';\nimport QuizPage from './components/QuizPage';\nimport QuizResult from './components/QuizResult';\nimport subjectsData from './data/subjects';\nimport questionsData from './data/questions'; // Import your questions data\nimport Header from './components/Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [quizResult, setQuizResult] = useState(null);\n  const handleSelectSubject = subject => {\n    setSelectedSubject(subject);\n  };\n  const handleQuizSubmit = (event, selectedOptions) => {\n    event.preventDefault();\n\n    // Assuming you have a questions array with correctAnswer property\n    const correctAnswers = questionsData.map(question => question.correctAnswer);\n\n    // Calculate the number of correct answers\n    const correctCount = Object.keys(selectedOptions).reduce((count, questionId) => selectedOptions[questionId] === correctAnswers[questionId - 1] ? count + 1 : count, 0);\n\n    // Calculate the percentage\n    const result = correctCount / questionsData.length * 100;\n\n    // Set the result using setQuizResult\n    setQuizResult(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !selectedSubject && /*#__PURE__*/_jsxDEV(SubjectList, {\n      subjects: subjectsData,\n      onSelectSubject: handleSelectSubject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this), selectedSubject && /*#__PURE__*/_jsxDEV(TutorialPage, {\n      selectedSubject: selectedSubject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 27\n    }, this), selectedSubject && /*#__PURE__*/_jsxDEV(QuizPage, {\n      questions: questionsData // Pass your questions data here\n      ,\n      onQuizSubmit: handleQuizSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), quizResult && /*#__PURE__*/_jsxDEV(QuizResult, {\n      result: quizResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IuLHWZdGJ+4NsfkmH/INrSy4xGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SubjectList","TutorialPage","QuizPage","QuizResult","subjectsData","questionsData","Header","jsxDEV","_jsxDEV","App","_s","selectedSubject","setSelectedSubject","quizResult","setQuizResult","handleSelectSubject","subject","handleQuizSubmit","event","selectedOptions","preventDefault","correctAnswers","map","question","correctAnswer","correctCount","Object","keys","reduce","count","questionId","result","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","subjects","onSelectSubject","questions","onQuizSubmit","_c","$RefreshReg$"],"sources":["C:/Users/armst/OneDrive/Desktop/dot eventures assignement/self-learning-app/src/App.js"],"sourcesContent":["// App.js\n\nimport React, { useState } from 'react';\nimport SubjectList from './components/SubjectList';\nimport TutorialPage from './components/TutorialPage';\nimport QuizPage from './components/QuizPage';\nimport QuizResult from './components/QuizResult';\nimport subjectsData from './data/subjects';\nimport questionsData from './data/questions'; // Import your questions data\nimport Header from './components/Header';\n\nconst App = () => {\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [quizResult, setQuizResult] = useState(null);\n\n  const handleSelectSubject = (subject) => {\n    setSelectedSubject(subject);\n  };\n\n  const handleQuizSubmit = (event, selectedOptions) => {\n    event.preventDefault();\n\n    // Assuming you have a questions array with correctAnswer property\n    const correctAnswers = questionsData.map((question) => question.correctAnswer);\n\n    // Calculate the number of correct answers\n    const correctCount = Object.keys(selectedOptions).reduce(\n      (count, questionId) => (selectedOptions[questionId] === correctAnswers[questionId - 1] ? count + 1 : count),\n      0\n    );\n\n    // Calculate the percentage\n    const result = (correctCount / questionsData.length) * 100;\n\n    // Set the result using setQuizResult\n    setQuizResult(result);\n  };\n\n  return (\n    <div className=\"app-container\">\n      <Header/>\n      {!selectedSubject && (\n        <SubjectList subjects={subjectsData} onSelectSubject={handleSelectSubject} />\n      )}\n      {selectedSubject && <TutorialPage selectedSubject={selectedSubject} />}\n      {selectedSubject && (\n        <QuizPage\n          questions={questionsData} // Pass your questions data here\n          onQuizSubmit={handleQuizSubmit}\n        />\n      )}\n      {quizResult && <QuizResult result={quizResult} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAOC,aAAa,MAAM,kBAAkB,CAAC,CAAC;AAC9C,OAAOC,MAAM,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACc,UAAU,EAAEC,aAAa,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMgB,mBAAmB,GAAIC,OAAO,IAAK;IACvCJ,kBAAkB,CAACI,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,eAAe,KAAK;IACnDD,KAAK,CAACE,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,cAAc,GAAGhB,aAAa,CAACiB,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,aAAa,CAAC;;IAE9E;IACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACR,eAAe,CAAC,CAACS,MAAM,CACtD,CAACC,KAAK,EAAEC,UAAU,KAAMX,eAAe,CAACW,UAAU,CAAC,KAAKT,cAAc,CAACS,UAAU,GAAG,CAAC,CAAC,GAAGD,KAAK,GAAG,CAAC,GAAGA,KAAM,EAC3G,CACF,CAAC;;IAED;IACA,MAAME,MAAM,GAAIN,YAAY,GAAGpB,aAAa,CAAC2B,MAAM,GAAI,GAAG;;IAE1D;IACAlB,aAAa,CAACiB,MAAM,CAAC;EACvB,CAAC;EAED,oBACEvB,OAAA;IAAKyB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B1B,OAAA,CAACF,MAAM;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,EACR,CAAC3B,eAAe,iBACfH,OAAA,CAACR,WAAW;MAACuC,QAAQ,EAAEnC,YAAa;MAACoC,eAAe,EAAEzB;IAAoB;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7E,EACA3B,eAAe,iBAAIH,OAAA,CAACP,YAAY;MAACU,eAAe,EAAEA;IAAgB;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrE3B,eAAe,iBACdH,OAAA,CAACN,QAAQ;MACPuC,SAAS,EAAEpC,aAAc,CAAC;MAAA;MAC1BqC,YAAY,EAAEzB;IAAiB;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF,EACAzB,UAAU,iBAAIL,OAAA,CAACL,UAAU;MAAC4B,MAAM,EAAElB;IAAW;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC5B,EAAA,CA3CID,GAAG;AAAAkC,EAAA,GAAHlC,GAAG;AA6CT,eAAeA,GAAG;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}