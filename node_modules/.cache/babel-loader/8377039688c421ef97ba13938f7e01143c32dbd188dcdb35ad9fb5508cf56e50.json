{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armst\\\\OneDrive\\\\Desktop\\\\dot eventures assignement\\\\self-learning-app\\\\src\\\\components\\\\QuizPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizPage = ({\n  questions,\n  onQuizSubmit\n}) => {\n  _s();\n  const [selectedOptions, setSelectedOptions] = useState({});\n  const handleOptionChange = (questionId, option) => {\n    setSelectedOptions({\n      ...selectedOptions,\n      [questionId]: option\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Quiz\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => onQuizSubmit(e, selectedOptions),\n      children: [questions.map(question => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 13\n        }, this), question.options.map(option => /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"option-label\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\",\n            name: question.id,\n            value: option,\n            onChange: () => handleOptionChange(question.id, option)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 17\n          }, this), option]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 15\n        }, this))]\n      }, question.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(QuizPage, \"dLRHIO/SyIp9lHMf8Crrz2iKqk4=\");\n_c = QuizPage;\nexport default QuizPage;\nvar _c;\n$RefreshReg$(_c, \"QuizPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuizPage","questions","onQuizSubmit","_s","selectedOptions","setSelectedOptions","handleOptionChange","questionId","option","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","e","map","question","text","options","className","type","name","id","value","onChange","_c","$RefreshReg$"],"sources":["C:/Users/armst/OneDrive/Desktop/dot eventures assignement/self-learning-app/src/components/QuizPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst QuizPage = ({ questions, onQuizSubmit }) => {\r\n  const [selectedOptions, setSelectedOptions] = useState({});\r\n\r\n  const handleOptionChange = (questionId, option) => {\r\n    setSelectedOptions({\r\n      ...selectedOptions,\r\n      [questionId]: option,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Quiz</h2>\r\n      <form onSubmit={(e) => onQuizSubmit(e, selectedOptions)}>\r\n        {questions.map((question) => (\r\n          <div key={question.id}>\r\n            <p>{question.text}</p>\r\n            {question.options.map((option) => (\r\n              <label key={option} className=\"option-label\">\r\n                <input\r\n                  type=\"radio\"\r\n                  name={question.id}\r\n                  value={option}\r\n                  onChange={() => handleOptionChange(question.id, option)}\r\n                />\r\n                {option}\r\n              </label>\r\n            ))}\r\n          </div>\r\n        ))}\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QuizPage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAa,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC,CAAC;EAE1D,MAAMS,kBAAkB,GAAGA,CAACC,UAAU,EAAEC,MAAM,KAAK;IACjDH,kBAAkB,CAAC;MACjB,GAAGD,eAAe;MAClB,CAACG,UAAU,GAAGC;IAChB,CAAC,CAAC;EACJ,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACbd,OAAA;MAAMe,QAAQ,EAAGC,CAAC,IAAKb,YAAY,CAACa,CAAC,EAAEX,eAAe,CAAE;MAAAK,QAAA,GACrDR,SAAS,CAACe,GAAG,CAAEC,QAAQ,iBACtBlB,OAAA;QAAAU,QAAA,gBACEV,OAAA;UAAAU,QAAA,EAAIQ,QAAQ,CAACC;QAAI;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACrBI,QAAQ,CAACE,OAAO,CAACH,GAAG,CAAER,MAAM,iBAC3BT,OAAA;UAAoBqB,SAAS,EAAC,cAAc;UAAAX,QAAA,gBAC1CV,OAAA;YACEsB,IAAI,EAAC,OAAO;YACZC,IAAI,EAAEL,QAAQ,CAACM,EAAG;YAClBC,KAAK,EAAEhB,MAAO;YACdiB,QAAQ,EAAEA,CAAA,KAAMnB,kBAAkB,CAACW,QAAQ,CAACM,EAAE,EAAEf,MAAM;UAAE;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzD,CAAC,EACDL,MAAM;QAAA,GAPGA,MAAM;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQX,CACR,CAAC;MAAA,GAZMI,QAAQ,CAACM,EAAE;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAahB,CACN,CAAC,eACFd,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAZ,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACV,EAAA,CAlCIH,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}