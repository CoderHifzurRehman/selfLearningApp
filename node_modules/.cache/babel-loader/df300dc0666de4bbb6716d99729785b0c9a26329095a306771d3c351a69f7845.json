{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\armst\\\\OneDrive\\\\Desktop\\\\dot eventures assignement\\\\self-learning-app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport SubjectList from './components/SubjectList';\nimport TutorialPage from './components/TutorialPage';\nimport QuizPage from './components/QuizPage';\nimport QuizResult from './components/QuizResult';\nimport subjectsData from './data/subjects';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [quizResult, setQuizResult] = useState(null);\n  const handleSelectSubject = subject => {\n    setSelectedSubject(subject);\n  };\n  const handleQuizSubmit = (event, selectedOptions, questions) => {\n    event.preventDefault();\n\n    // Assuming you have a questions array with correctAnswer property\n    const correctAnswers = questions.map(question => question.correctAnswer);\n\n    // Calculate the number of correct answers\n    const correctCount = Object.keys(selectedOptions).reduce((count, questionId) => selectedOptions[questionId] === correctAnswers[questionId - 1] ? count + 1 : count, 0);\n\n    // Calculate the percentage\n    const result = correctCount / questions.length * 100;\n\n    // Set the result using setQuizResult\n    setQuizResult(result);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [!selectedSubject && /*#__PURE__*/_jsxDEV(SubjectList, {\n      subjects: subjectsData,\n      onSelectSubject: handleSelectSubject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), selectedSubject && /*#__PURE__*/_jsxDEV(TutorialPage, {\n      selectedSubject: selectedSubject\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this), selectedSubject && /*#__PURE__*/_jsxDEV(QuizPage, {\n      questions: [{\n        id: 1,\n        text: 'What does HTML stand for?',\n        options: ['Hyper Text Markup Language', 'Hyperlink and Text Markup Language', 'HighText Machine Language', 'None of the above'],\n        correctAnswer: 'Hyper Text Markup Language'\n      }, {\n        id: 2,\n        text: 'Which of the following is a CSS preprocessor?',\n        options: ['Sass', 'LESS', 'Stylus', 'All of the above'],\n        correctAnswer: 'All of the above'\n      }, {\n        id: 3,\n        text: 'What is the purpose of JavaScript?',\n        options: ['To style web pages', 'To program the behavior of web pages', 'To create database queries', 'To define the structure of web pages'],\n        correctAnswer: 'To program the behavior of web pages'\n      }, {\n        id: 4,\n        text: 'What is the output of the following JavaScript code?\\n\\n```javascript\\nconsole.log(2 + \"2\");\\n```',\n        options: ['4', '22', 'ConcatenationError', 'NaN'],\n        correctAnswer: '22'\n      }, {\n        id: 5,\n        text: 'Which of the following is not a valid React lifecycle method?',\n        options: ['componentDidMount', 'componentShouldUpdate', 'componentWillUnmount', 'render'],\n        correctAnswer: 'componentShouldUpdate'\n      }],\n      onQuizSubmit: handleQuizSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), quizResult && /*#__PURE__*/_jsxDEV(QuizResult, {\n      result: quizResult\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"IuLHWZdGJ+4NsfkmH/INrSy4xGE=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","SubjectList","TutorialPage","QuizPage","QuizResult","subjectsData","jsxDEV","_jsxDEV","App","_s","selectedSubject","setSelectedSubject","quizResult","setQuizResult","handleSelectSubject","subject","handleQuizSubmit","event","selectedOptions","questions","preventDefault","correctAnswers","map","question","correctAnswer","correctCount","Object","keys","reduce","count","questionId","result","length","className","children","subjects","onSelectSubject","fileName","_jsxFileName","lineNumber","columnNumber","id","text","options","onQuizSubmit","_c","$RefreshReg$"],"sources":["C:/Users/armst/OneDrive/Desktop/dot eventures assignement/self-learning-app/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport SubjectList from './components/SubjectList';\nimport TutorialPage from './components/TutorialPage';\nimport QuizPage from './components/QuizPage';\nimport QuizResult from './components/QuizResult';\nimport subjectsData from './data/subjects';\nimport './App.css'\n\nconst App = () => {\n  const [selectedSubject, setSelectedSubject] = useState(null);\n  const [quizResult, setQuizResult] = useState(null);\n\n  const handleSelectSubject = (subject) => {\n    setSelectedSubject(subject);\n  };\n\n  const handleQuizSubmit = (event, selectedOptions,questions) => {\n    event.preventDefault();\n\n    // Assuming you have a questions array with correctAnswer property\n    const correctAnswers = questions.map((question) => question.correctAnswer);\n    \n    // Calculate the number of correct answers\n    const correctCount = Object.keys(selectedOptions).reduce(\n      (count, questionId) => (selectedOptions[questionId] === correctAnswers[questionId - 1] ? count + 1 : count),\n      0\n    );\n\n    // Calculate the percentage\n    const result = (correctCount / questions.length) * 100;\n\n    // Set the result using setQuizResult\n    setQuizResult(result);\n  };\n\n  \n\n  return (\n    <div className=\"app-container\">\n      {!selectedSubject && (\n        <SubjectList subjects={subjectsData} onSelectSubject={handleSelectSubject} />\n      )}\n      {selectedSubject && <TutorialPage selectedSubject={selectedSubject} />}\n      {selectedSubject && (\n        <QuizPage\n          questions={[\n            {\n              id: 1,\n              text: 'What does HTML stand for?',\n              options: ['Hyper Text Markup Language', 'Hyperlink and Text Markup Language', 'HighText Machine Language', 'None of the above'],\n              correctAnswer: 'Hyper Text Markup Language',\n            },\n            {\n              id: 2,\n              text: 'Which of the following is a CSS preprocessor?',\n              options: ['Sass', 'LESS', 'Stylus', 'All of the above'],\n              correctAnswer: 'All of the above',\n            },\n            {\n              id: 3,\n              text: 'What is the purpose of JavaScript?',\n              options: ['To style web pages', 'To program the behavior of web pages', 'To create database queries', 'To define the structure of web pages'],\n              correctAnswer: 'To program the behavior of web pages',\n            },\n            {\n              id: 4,\n              text: 'What is the output of the following JavaScript code?\\n\\n```javascript\\nconsole.log(2 + \"2\");\\n```',\n              options: ['4', '22', 'ConcatenationError', 'NaN'],\n              correctAnswer: '22',\n            },\n            {\n              id: 5,\n              text: 'Which of the following is not a valid React lifecycle method?',\n              options: ['componentDidMount', 'componentShouldUpdate', 'componentWillUnmount', 'render'],\n              correctAnswer: 'componentShouldUpdate',\n            },\n          ]}\n          onQuizSubmit={handleQuizSubmit}\n        />\n      )}\n      {quizResult && <QuizResult result={quizResult} />}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,OAAO,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMc,mBAAmB,GAAIC,OAAO,IAAK;IACvCJ,kBAAkB,CAACI,OAAO,CAAC;EAC7B,CAAC;EAED,MAAMC,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,eAAe,EAACC,SAAS,KAAK;IAC7DF,KAAK,CAACG,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,cAAc,GAAGF,SAAS,CAACG,GAAG,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,aAAa,CAAC;;IAE1E;IACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACT,eAAe,CAAC,CAACU,MAAM,CACtD,CAACC,KAAK,EAAEC,UAAU,KAAMZ,eAAe,CAACY,UAAU,CAAC,KAAKT,cAAc,CAACS,UAAU,GAAG,CAAC,CAAC,GAAGD,KAAK,GAAG,CAAC,GAAGA,KAAM,EAC3G,CACF,CAAC;;IAED;IACA,MAAME,MAAM,GAAIN,YAAY,GAAGN,SAAS,CAACa,MAAM,GAAI,GAAG;;IAEtD;IACAnB,aAAa,CAACkB,MAAM,CAAC;EACvB,CAAC;EAID,oBACExB,OAAA;IAAK0B,SAAS,EAAC,eAAe;IAAAC,QAAA,GAC3B,CAACxB,eAAe,iBACfH,OAAA,CAACN,WAAW;MAACkC,QAAQ,EAAE9B,YAAa;MAAC+B,eAAe,EAAEtB;IAAoB;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC7E,EACA9B,eAAe,iBAAIH,OAAA,CAACL,YAAY;MAACQ,eAAe,EAAEA;IAAgB;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EACrE9B,eAAe,iBACdH,OAAA,CAACJ,QAAQ;MACPgB,SAAS,EAAE,CACT;QACEsB,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,2BAA2B;QACjCC,OAAO,EAAE,CAAC,4BAA4B,EAAE,oCAAoC,EAAE,2BAA2B,EAAE,mBAAmB,CAAC;QAC/HnB,aAAa,EAAE;MACjB,CAAC,EACD;QACEiB,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,+CAA+C;QACrDC,OAAO,EAAE,CAAC,MAAM,EAAE,MAAM,EAAE,QAAQ,EAAE,kBAAkB,CAAC;QACvDnB,aAAa,EAAE;MACjB,CAAC,EACD;QACEiB,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,oCAAoC;QAC1CC,OAAO,EAAE,CAAC,oBAAoB,EAAE,sCAAsC,EAAE,4BAA4B,EAAE,sCAAsC,CAAC;QAC7InB,aAAa,EAAE;MACjB,CAAC,EACD;QACEiB,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,mGAAmG;QACzGC,OAAO,EAAE,CAAC,GAAG,EAAE,IAAI,EAAE,oBAAoB,EAAE,KAAK,CAAC;QACjDnB,aAAa,EAAE;MACjB,CAAC,EACD;QACEiB,EAAE,EAAE,CAAC;QACLC,IAAI,EAAE,+DAA+D;QACrEC,OAAO,EAAE,CAAC,mBAAmB,EAAE,uBAAuB,EAAE,sBAAsB,EAAE,QAAQ,CAAC;QACzFnB,aAAa,EAAE;MACjB,CAAC,CACD;MACFoB,YAAY,EAAE5B;IAAiB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CACF,EACA5B,UAAU,iBAAIL,OAAA,CAACH,UAAU;MAAC2B,MAAM,EAAEnB;IAAW;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV,CAAC;AAAC/B,EAAA,CA3EID,GAAG;AAAAqC,EAAA,GAAHrC,GAAG;AA6ET,eAAeA,GAAG;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}